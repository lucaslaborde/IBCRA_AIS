<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/output_map_res_2.map" md5sum="d125f0cc706fcc63876a36673c225275" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		output_map_res_2.map
*   Map declaration(s):	output_map_res_2
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FIBCRA_Mediaciones_Lib%252FInserts%252FInserts%257DInsertarCUPResponseMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FIBCRAAI%252FAIS%252FAIS_InsertCUP%257DinvokeResponseMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:in2="wsdl.http://IBCRA_Mediaciones_Lib/Inserts/Inserts"
    xmlns:in4="http://IBCRA_Mediaciones_Lib/InsertarHistoricoInformativa"
    xmlns:in3="http://IBCRA_Mediaciones_Lib/UpdateNumerosDiasCalendarioInformativa"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io4="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:in9="http://IBCRA_Mediaciones_Lib/Inserts/Inserts"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:in5="http://IBCRA_Mediaciones_Lib/InsertarInformativaReintento"
    xmlns:in6="http://IBCRA_Mediaciones_Lib/InsertarSolicitudInformativa"
    xmlns:in="http://IBCRA_Mediaciones_Lib/InsertarComentario"
    xmlns:in7="http://IBCRA_Mediaciones_Lib/InsertarActividadInformativa"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:in8="http://IBCRA_Mediaciones_Lib/InsertarCUP"
    xmlns:out2="http://IBCRAAI/AIS/AIS_InsertCUP"
    xmlns:out="wsdl.http://IBCRAAI/AIS/AIS_InsertCUP"
    xmlns:map="http://IBCRA_AIS/xslt/output_map_res_2"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set date exsl map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'out:invokeResponseMsg'"/>
            </xsl:attribute>
            <xsl:call-template name="map:output_map_res_22">
              <xsl:with-param name="body" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="body" mode="map:output_map_res_2"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:output_map_res_2">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:invokeResponseMsg'"/>
      </xsl:attribute>
      <out2:invokeResponse>
        <!-- a simple data mapping: "in9:InsertarCUPResponse/output_InsertarCUP"(string) to "Contador"(string) -->
        <xsl:choose>
          <xsl:when test="normalize-space(in9:InsertarCUPResponse/output_InsertarCUP)">
            <xsl:element name="Contador">
              <xsl:value-of select="in9:InsertarCUPResponse/output_InsertarCUP"/>
            </xsl:element>
          </xsl:when>
          <xsl:otherwise>
            <Contador xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </out2:invokeResponse>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:output_map_res_22">
    <xsl:param name="body"/>
    <out2:invokeResponse>
      <!-- a simple data mapping: "$body/in9:InsertarCUPResponse/output_InsertarCUP"(string) to "Contador"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($body/in9:InsertarCUPResponse/output_InsertarCUP)">
          <xsl:element name="Contador">
            <xsl:value-of select="$body/in9:InsertarCUPResponse/output_InsertarCUP"/>
          </xsl:element>
        </xsl:when>
        <xsl:otherwise>
          <Contador xsi:nil="true"/>
        </xsl:otherwise>
      </xsl:choose>
    </out2:invokeResponse>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
